-- Customer engagement analytics with SQL: accounts, sessions, and email funnels.

WITH
-- Accounts data: number of unique accounts per date, country, and account attributes
  account_data AS (
  SELECT
    sp.country,
    s.date,
    a.send_interval,
    a.is_verified,
    a.is_unsubscribed,
    COUNT(DISTINCT a.id) AS account_cnt
  FROM
    DA.account AS a
  JOIN
    DA.account_session AS acs
  ON
    a.id = acs.account_id
  JOIN
    DA.session AS s
  ON
    acs.ga_session_id = s.ga_session_id
  JOIN
    DA.session_params AS sp
  ON
    acs.ga_session_id = sp.ga_session_id
  GROUP BY
    s.date,
    sp.country,
    a.send_interval,
    a.is_verified,
    a.is_unsubscribed),




   -- Emails data: number of sent, opened, and visited messages per date, country, and account attributes
  emails_data AS (
SELECT
  sp.country,
  DATE_ADD(s.date, INTERVAL es.sent_date DAY) AS date,
  a.send_interval,
  a.is_verified,
  a.is_unsubscribed,
  COUNT(DISTINCT es.id_message) AS sent_msg,
  COUNT(DISTINCT eo.id_message) AS open_msg,
  COUNT(DISTINCT ev.id_message) AS visit_msg
FROM
  DA.email_sent AS es
JOIN
  DA.account AS a
ON
  es.id_account = a.id
JOIN
  DA.account_session AS acs
ON
  es.id_account = acs.account_id
JOIN
  DA.session AS s
ON
  acs.ga_session_id = s.ga_session_id
JOIN
  DA.session_params AS sp
ON
  acs.ga_session_id = sp.ga_session_id
LEFT JOIN
  DA.email_open AS eo
ON
  es.id_message = eo.id_message
LEFT JOIN
  DA.email_visit AS ev
ON
  es.id_message = ev.id_message
GROUP BY
  sp.country,
  date,
  a.send_interval,
  a.is_verified,
  a.is_unsubscribed),


  -- Combine account and email data into one dataset
  union_data AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    0 AS sent_msg,
    0 AS open_msg,
    0 AS visit_msg,
  FROM
    account_data
  UNION DISTINCT
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    0 AS account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
  FROM
    emails_data ),


  -- Aggregate data after UNION to get final daily counts
  union_group AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    SUM(account_cnt) AS account_cnt,
    SUM(sent_msg) AS sent_msg,
    SUM(open_msg) AS open_msg,
    SUM(visit_msg) AS visit_msg
  FROM
    union_data
  GROUP BY
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed ),


  -- Add country-level totals for accounts and sent emails
  total_cnt AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    SUM (sent_msg) OVER (PARTITION BY country) AS total_country_sent_cnt,
    SUM (account_cnt) OVER (PARTITION BY country) AS total_country_account_cnt
  FROM
    union_group ),


  -- Rank countries by accounts and sent emails
  total_rank AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    total_country_sent_cnt,
    total_country_account_cnt,
    DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt,
    DENSE_RANK () OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt
  FROM
    total_cnt )


-- Final query: select metrics for top-10 countries by accounts or sent emails
SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    total_country_sent_cnt,
    total_country_account_cnt,
    rank_total_country_account_cnt,
    rank_total_country_sent_cnt
FROM
  total_rank
WHERE
  (rank_total_country_account_cnt <= 10
    OR rank_total_country_sent_cnt<= 10)
